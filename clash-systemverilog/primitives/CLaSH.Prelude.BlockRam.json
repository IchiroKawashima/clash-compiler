[ { "BlackBox" :
    { "name" : "CLaSH.Prelude.BlockRam.blockRam#"
    , "type" :
"blockRam# :: SClock clk       -- clk,  ARG[0]
           -> Vec n a          -- init, ARG[1]
           -> Signal' clk Int  -- rd,   ARG[2]
           -> Signal' clk Bool -- wren, ARG[3]
           -> Signal' clk Int  -- wr,   ARG[4]
           -> Signal' clk a    -- din,  ARG[5]
           -> Signal' clk a"
    , "templateD" :
"// blockRam begin
~SIGD[~GENSYM[RAM][0]][1];
logic [~SIZE[~TYP[5]]-1:0] ~GENSYM[dout][1];
initial begin
  ~SYM[0] = ~LIT[1];
end
always @(posedge ~CLK[0]) begin : ~GENSYM[~COMPNAME_blockRam][2]
  if (~ARG[3]) begin
    ~SYM[0][~ARG[4]] <= ~TOBV[~ARG[5]][~TYP[5]];
  end
  ~SYM[1] <= ~SYM[0][~ARG[2]];
end
assign ~RESULT = ~FROMBV[~SYM[1]][~TYP[5]];
// blockRam end"
    }
  }
]
